[{"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\index.js":"1","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\App.js":"2","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\reportWebVitals.js":"3","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\MainComponent.js":"4","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\Login\\Login.js":"5","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\HeaderComponent.js":"6","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\FooterComponent.js":"7","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\GestionUsers\\GestionUsers.js":"8","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\Home\\Home.js":"9","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\GestionSales\\GestionSales.js":"10"},{"size":665,"mtime":1633135734894,"results":"11","hashOfConfig":"12"},{"size":377,"mtime":1633135734715,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1633135734921,"results":"14","hashOfConfig":"12"},{"size":1498,"mtime":1634067298094,"results":"15","hashOfConfig":"12"},{"size":3330,"mtime":1634225568590,"results":"16","hashOfConfig":"12"},{"size":2792,"mtime":1634067298086,"results":"17","hashOfConfig":"12"},{"size":2626,"mtime":1633135734743,"results":"18","hashOfConfig":"12"},{"size":9547,"mtime":1633458766881,"results":"19","hashOfConfig":"12"},{"size":144,"mtime":1633135734828,"results":"20","hashOfConfig":"12"},{"size":490,"mtime":1634067298066,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1pzvpin",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\index.js",[],["46","47"],"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\App.js",[],"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\reportWebVitals.js",[],"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\MainComponent.js",[],"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\Login\\Login.js",["48","49","50"],"import React, { Component, useState } from 'react';\nimport {FormGroup, Form, Button} from \"reactstrap\";\nimport validator from 'validator';\n\nconst Login = () => {\n  \n  const [errorMessage, setErrorMessage] = useState('')\n  const [email, setEmail] = useState(\"\");\n  const validate = (value) => {\n  \n    if (validator.isStrongPassword(value, {\n      minLength: 8, minLowercase: 1,\n      minUppercase: 1, minNumbers: 1, minSymbols: 1\n    })) {\n      setErrorMessage('Is Strong Password')\n    } else {\n      setErrorMessage('Is Not Strong Password. Need to have at least one CAP, one number and a special character')\n    }\n  }\n  \n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return (\n    <div style={{\n      marginLeft: '200px',\n    }}>\n    <div className=\"Login\">\n      <pre>\n        <h2>LOGIN</h2>\n        <form onSubmit={handleSubmit}>\n          <FormGroup size=\"lg\">\n               <label>Email</label>\n               <input \n              className = 'form-group'\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}              \n            />\n          </FormGroup>\n        </form>\n        <span>Enter Password: </span><input type=\"password\"\n          onChange={(e) => validate(e.target.value)}></input> <br />\n        <span style={{\n          fontWeight: 'bold',\n          color: 'red',\n        }}>{errorMessage}</span>\n      </pre>\n    </div>\n    </div>\n  );\n}\n\n// class Login extends Component{\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       email:'',\n//       password:''\n//     }\n    \n//     this.setErrorMessage = '';\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//     this.handleChange = this.handleChange.bind(this);\n    \n//   }\n\n\n//   handleSubmit(e) {\n//     e.preventDefault();\n//   }\n\n//   validate_pass = (value) => {\n//     if (validator.isStrongPassword(value, {\n//       minLength: 8, minLowercase: 1,\n//       minUppercase: 1, minNumbers: 1, minSymbols: 1\n//     })) {\n//       this.setErrorMessage('Is Strong Password')\n//     } else {\n//       this.setErrorMessage('Is Not Strong Password')\n//     }\n//   }\n\n//   handleChange(event) {\n//     this.setState({email: event.target.email, password: event.target.password})\n//   }\n\n//   render () {\n//     return (\n//       <div className=\"Login\">\n//         <form onSubmit={this.handleSubmit}>\n//           <FormGroup size=\"lg\">\n//             <label>Email</label>\n//             <input \n//               className = 'form-group'\n//               type=\"email\"\n//               //value={this.state.email}\n//               onChange={(e,newValue) => this.setState({email:newValue})}\n              \n//             />\n//           </FormGroup>\n//           <FormGroup size=\"lg\">\n//             <label>Password</label>\n//             <input\n//               className = 'form-group'\n//               type=\"password\"\n//               //value={this.state.password}\n//               onChange= {(e) => this.validate_pass(this.setState({password:e.target.password}))}\n//             />\n//           </FormGroup>\n//           <Button block size=\"lg\" type=\"submit\" color='success' >\n//             Login\n//           </Button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n//onClick = {(e) => this.handleClick(e)} \nexport default Login;\n","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\HeaderComponent.js",[],"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\FooterComponent.js",[],"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\GestionUsers\\GestionUsers.js",["51","52"],"import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport {Table, Button, Modal, ModalBody, ModalHeader, FormGroup, ModalFooter} from 'reactstrap';\r\n\r\n\r\nconst DATOS = [\r\n  { id: 1, email: \"jose@gmail.com\", phoneNumber: \"11111\", address: \"Av Huston Pards 32\", firstName: \"Jose\", lastName: \"Garcia\" },\r\n  { id: 2, email: \"felipe@gmail.com\", phoneNumber: \"22222\", address: \"Calle Road Better #12\", firstName: \"Felipe\", lastName: \"Rojas\" },\r\n  { id: 3, email: \"nicolas@gmail.com\", phoneNumber: \"333333\", address: \"KR 101 Wisdom-Mark\", firstName: \"Nicolas\", lastName: \"Moncada\" },\r\n  { id: 4, email: \"majo@gmail.com\", phoneNumber: \"444444\", address: \"Av  South WallBrick 2 \", firstName: \"Maria\", lastName: \"Capera\" },\r\n  { id: 5, email: \"marlon@gmail.com\", phoneNumber: \"55555\", address: \"Cll Wallas Root 23\", firstName: \"Marlon\", lastName: \"Muete\" }\r\n];\r\n\r\nclass GestionUsers extends Component{\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        datos : DATOS,\r\n        modalInsertar: false,\r\n        modalActualizar: false,\r\n        form: {\r\n          id: \"\",\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          phoneNumber: \"\",\r\n          address: \"\"\r\n        }\r\n      };\r\n    }\r\n\r\n    mostrarModalActualizar = (dato) => {\r\n      this.setState({modalActualizar:true, form:dato})\r\n    };\r\n\r\n    cerrarModalActualizar = () => {\r\n      this.setState({modalActualizar:false})\r\n    };\r\n\r\n    mostrarModalInsertar = () => {\r\n      this.setState({modalInsertar:true})\r\n    };\r\n\r\n    cerrarModalInsertar = () => {\r\n      this.setState({modalInsertar:false})\r\n    };\r\n\r\n    editar = (dato) => {\r\n      let cont = 0;\r\n      let aux = this.state.datos;\r\n      aux.map((datoAux) => {\r\n        if (dato.id === datoAux.id) {\r\n          aux[cont].firstName = dato.firstName;\r\n          aux[cont].lastName = dato.lastName;\r\n          aux[cont].email = dato.email;\r\n          aux[cont].phoneNumber = dato.phoneNumber;\r\n          aux[cont].address = dato.address;\r\n        }\r\n        cont++;\r\n      });\r\n  \r\n      this.setState({datos: aux, modalActualizar:false });\r\n    };\r\n\r\n    eliminar = (dato) => {\r\n      let opcion = window.confirm(\"¿Está usted seguro de eliminar a \" + dato.firstName + \" \" + dato.lastName + \"?\");\r\n      if (opcion) {\r\n        let cont = 0;\r\n        let aux = this.state.datos;\r\n        aux.map((datoAux) => {\r\n          if (dato.id === datoAux.id) {\r\n            aux.splice(cont, 1);\r\n        };\r\n          cont++\r\n        });\r\n        this.setState({datos: aux});\r\n      }\r\n    };\r\n\r\n    insertar = () => {\r\n      let newUser = {...this.state.form};\r\n      newUser.id = this.state.datos.length + 1;\r\n\r\n      let aux = this.state.datos;\r\n      aux.push(newUser);\r\n\r\n      this.setState({datos: aux, modalInsertar:false});\r\n    };\r\n\r\n    handleChange = (e) =>{\r\n      this.setState({\r\n        form: {\r\n          ...this.state.form,\r\n          [e.target.name]: e.target.value,\r\n        }\r\n      })\r\n    }\r\n    \r\n    render() {\r\n      return(\r\n        <>\r\n        <Container>\r\n          <br />\r\n          <Button color=\"primary\" onClick={() => this.mostrarModalInsertar()}>Insertar nuevo registro</Button>\r\n        <br /> <br />\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre</th>\r\n              <th>Apellido</th>\r\n              <th>email</th>\r\n              <th>Télefono</th>\r\n              <th>Dirección</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.datos.map((dato) =>(\r\n              <tr key={dato.id}>\r\n                <td>{dato.firstName}</td>\r\n                <td>{dato.lastName}</td>\r\n                <td>{dato.email}</td>\r\n                <td>{dato.phoneNumber}</td>\r\n                <td>{dato.address}</td>\r\n                <td><Button color=\"success\"\r\n                onClick={() => this.mostrarModalActualizar(dato)}>Editar</Button>{\"  \"}\r\n                <Button color=\"danger\"\r\n                onClick={() => this.eliminar(dato)}>Eliminar</Button></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        </Container>\r\n\r\n        <Modal isOpen={this.state.modalActualizar}>\r\n          <ModalHeader>\r\n            <div><h3>Actualizar Usuario {this.state.form.id}</h3></div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>\r\n                Id:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                value={this.state.form.id}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Email:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.email}\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Nombre:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.firstName}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Apellido:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.lastName}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Dirección:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.address}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Telefóno:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"phoneNumber\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                value={this.state.form.phoneNumber}\r\n              />\r\n            </FormGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.editar(this.state.form)}\r\n            >\r\n              Actualizar\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.cerrarModalActualizar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        <Modal isOpen={this.state.modalInsertar}>\r\n          <ModalHeader>\r\n            <div><h3>Insertar Usuario</h3></div>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>\r\n                Id:\r\n              </label>\r\n\r\n              <input\r\n                className=\"form-control\"\r\n                readOnly\r\n                type=\"text\"\r\n                value={this.state.datos.length + 1}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Email:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Nombre:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Apellido:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Dirección:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"address\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label>\r\n                Telefóno:\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"phoneNumber\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => this.insertar()}\r\n            >\r\n              Insertar\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.cerrarModalInsertar()}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default GestionUsers;\r\n","C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\Home\\Home.js",[],"C:\\Users\\piper\\Documents\\GitHub\\PinneapleTeam\\Sprint2\\app-sprint\\src\\components\\GestionSales\\GestionSales.js",["53","54"],"import React , { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './GestionSales.module.css';\r\n\r\n\r\nclass GestionSales extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"GestionSales\">\r\n                <label>Bienvenido a la gestion de ventas</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GestionSales;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":2,"column":20,"nodeType":"61","messageId":"62","endLine":2,"endColumn":24},{"ruleId":"59","severity":1,"message":"64","line":2,"column":26,"nodeType":"61","messageId":"62","endLine":2,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":53,"column":25,"nodeType":"67","messageId":"68","endLine":53,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":72,"column":27,"nodeType":"67","messageId":"68","endLine":72,"endColumn":29},{"ruleId":"59","severity":1,"message":"69","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":17},{"ruleId":"59","severity":1,"message":"70","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PropTypes' is defined but never used.","'styles' is defined but never used.","no-global-assign","no-unsafe-negation"]